if (rootProject.ext.android.isModule) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    //如果资源文件有相同的名字，前面module的资源文件将替换后面的，Manifest会合并,
    // 因此在资源文件前面加前缀(注意：AS不会自动帮我们的资源名自动加上前缀，
    // 原来写了这段代码之后，AS会约束我们定义资源时，要我们手动加上前缀，否则报错！！所以只是起约束作用！！)
    resourcePrefix "main_"
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner

    }

    signingConfigs {
        release {
            keyAlias rootProject.ext.sign.keyAlias
            keyPassword rootProject.ext.sign.keyPassword
            storeFile file(rootProject.ext.sign.storeFile)
            storePassword rootProject.ext.sign.storePassword
        }
    }

    buildTypes {
        release {
            debuggable rootProject.ext.android.releaseDebuggable
            jniDebuggable rootProject.ext.android.releaseDebuggable
            minifyEnabled rootProject.ext.android.releaseMinifyEnabled
            zipAlignEnabled rootProject.ext.android.releaseZipAlignEnabled
            if (rootProject.ext.android.isModule) {
                //Resource shrinker cannot be used for libraries
                shrinkResources rootProject.ext.android.releaseShrinkResources
            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable rootProject.ext.android.debugDebuggable
            jniDebuggable rootProject.ext.android.debugDebuggable
            minifyEnabled rootProject.ext.android.debugMinifyEnabled
            zipAlignEnabled rootProject.ext.android.debugZipAlignEnabled
            if (rootProject.ext.android.isModule) {
                //Resource shrinker cannot be used for libraries
                shrinkResources rootProject.ext.android.debugShrinkResources
            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            if (rootProject.ext.android.isModule) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发模式下排除module文件夹中的所有文件
                java {
                    exclude 'module/**'
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.java.sourceCompatibility
        targetCompatibility rootProject.ext.java.targetCompatibility
    }

}

dependencies {
    implementation project(':module_base')
    kapt "com.alibaba:arouter-compiler:1.2.2"
}
