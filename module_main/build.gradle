if (rootProject.ext.android.isModule) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    //如果资源文件有相同的名字，前面module的资源文件将替换后面的，Manifest会合并,因此在资源文件前面加前缀
    resourcePrefix "main_"
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner rootProject.ext.android.testInstrumentationRunner

    }

    signingConfigs {
        release {
            keyAlias rootProject.ext.sign.keyAlias
            keyPassword rootProject.ext.sign.keyPassword
            storeFile file(rootProject.ext.sign.storeFile)
            storePassword rootProject.ext.sign.storePassword
        }
    }

    buildTypes {
        release {
            debuggable rootProject.ext.android.releaseDebuggable
            jniDebuggable rootProject.ext.android.releaseDebuggable
            minifyEnabled rootProject.ext.android.releaseMinifyEnabled
            zipAlignEnabled rootProject.ext.android.releaseZipAlignEnabled
            if (rootProject.ext.android.isModule) {
                //Resource shrinker cannot be used for libraries
                shrinkResources rootProject.ext.android.releaseShrinkResources
            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable rootProject.ext.android.debugDebuggable
            jniDebuggable rootProject.ext.android.debugDebuggable
            minifyEnabled rootProject.ext.android.debugMinifyEnabled
            zipAlignEnabled rootProject.ext.android.debugZipAlignEnabled
            if (rootProject.ext.android.isModule) {
                //Resource shrinker cannot be used for libraries
                shrinkResources rootProject.ext.android.debugShrinkResources
            }
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.java.sourceCompatibility
        targetCompatibility rootProject.ext.java.targetCompatibility
    }

}

dependencies {
    implementation project(':module_base')
}
